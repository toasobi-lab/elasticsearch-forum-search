---
import Layout from '../layouts/Layout.astro';

// Fetch available tags
const tagsResponse = await fetch('http://backend:8000/api/tags/');
const availableTags: string[] = await tagsResponse.json();

console.log('Available Tags (server-side):', availableTags);
---

<Layout title="Forum Search - New Post">
  <div class="max-w-2xl mx-auto">
    <h1 class="text-3xl font-bold text-gray-900 mb-8">Create New Post</h1>
    
    <form class="space-y-6">
      <div>
        <label for="title" class="block text-sm font-medium text-gray-700">
          Title
        </label>
        <input
          type="text"
          name="title"
          id="title"
          required
          class="mt-1 block w-full rounded-lg border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
        />
      </div>
      
      <div>
        <label for="content" class="block text-sm font-medium text-gray-700">
          Content
        </label>
        <textarea
          name="content"
          id="content"
          rows="6"
          required
          class="mt-1 block w-full rounded-lg border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
        ></textarea>
      </div>
      
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-2">
          Tags (comma-separated)
        </label>
        <input
          type="text"
          name="tags"
          id="tags"
          class="mt-1 block w-full rounded-lg border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
          placeholder="e.g., astro, webdev, tutorial"
        />
      </div>
      
      <div class="flex justify-end">
        <button
          type="submit"
          class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
        >
          Create Post
        </button>
      </div>
    </form>
  </div>
</Layout>

<script>
  // Client-side form handling
  const form = document.querySelector('form');
  
  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(e.target as HTMLFormElement);
    const data = {
      title: formData.get('title'),
      content: formData.get('content'),
      tags: (formData.get('tags') as string)?.split(',').map(tag => tag.trim()).filter(tag => tag.length > 0) || []
    };
    
    try {
      const response = await fetch('http://localhost:8000/api/posts/', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      });
      
      if (response.ok) {
        console.log('API response:', response);
        const post = await response.json();
        console.log('Parsed post object:', post);
        window.location.href = `/posts/${post.id}/`;
      } else {
        throw new Error('Failed to create post');
      }
    } catch (error) {
      console.error('Error:', error);
      alert('Failed to create post. Please try again.');
    }
  });
</script> 